---
- name: Terminate an EC2 instance
  hosts: localhost
  remote_user: <%= ec2[:remote_user] %>
  gather_facts: True

  vars:
    aws_access_key: <%= ec2[:aws_access_key] %>
    aws_secret_key: <%= ec2[:aws_secret_key] %>
    region: <%= ec2[:region] %>
    resource_name: <%= ec2[:resource_name] %>

  tasks:
    - name: Gather instance facts
      amazon.aws.ec2_instance_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ resource_name }}"
          instance-state-name: running
      register: ec2_facts

    - name: Terminate instances that were previously launched
      ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        state: 'absent'
        instance_ids: '{{ item.instance_id }}'
      with_items: "{{ ec2_facts.instances }}"
      when: ec2_facts is defined

    - name: Gather group facts
      amazon.aws.ec2_group_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ resource_name }}"
      register: group_facts

    - name: set security group id fact
      set_fact:
        security_group_ids: "{{group_facts['security_groups']}}"
      when: group_facts is defined

    - name: Delete ec2 security group
      ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        state: absent
        group_id: "{{ item['group_id'] }}"
      with_items: "{{ security_group_ids }}"
      retries: 10
      delay: 6
      register: result
      until: result is not failed
      ignore_errors: yes

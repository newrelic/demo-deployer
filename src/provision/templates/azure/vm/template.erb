---

# doc foc creating azure AD profile
# https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal

- name: Create Azure VM
  hosts: localhost
  connection: local

  vars:
    client_id: <%= azure[:client_id] %>
    tenant: <%= azure[:tenant] %>
    subscription_id: <%= azure[:subscription_id] %>
    secret: <%= azure[:secret] %>
    ssh_public_key: <%= azure[:ssh_public_key] %>
    remote_user: <%= vm[:remote_user] %>
    instance_size: <%= vm[:instance_size] %>
    resource_id: <%= vm[:resource_id] %>
    resource_name: <%= vm[:resource_name] %>
    artifact_path: <%= vm[:artifact_file_path] %>
    ip_name: <%= vm[:ip_name] %>
    nic_name: <%= vm[:nic_name] %>
    tags: <%= vm[:tags] %>
    region: <%= azure[:region] %>
    resource_group: <%= azure[:resource_group] %>
    vnet_name: <%= azure[:vnet_name] %>
    sg_name: <%= azure[:sg_name] %>
    subnet_name: <%= azure[:subnet_name] %>
    range_ports: <%= azure[:range_ports] %>

  tasks:
    - include_tasks: vnet.yml

    - name: Create public IP address
      azure_rm_publicipaddress:
        client_id: "{{ client_id }}"
        tenant: "{{ tenant }}"
        subscription_id: "{{ subscription_id }}"
        secret: "{{ secret }}"
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: "{{ ip_name }}"
      register: output_ip_address

    - name: Dump public IP for VM which will be created
      debug:
        msg: "The public IP is {{ output_ip_address.state.ip_address }}."

    - name: create fact for public ip
      set_fact:
        vm_public_ip: "{{ output_ip_address.state.ip_address }}"
      when: output_ip_address is defined

    - name: Create virtual network inteface card
      azure_rm_networkinterface:
        client_id: "{{ client_id }}"
        tenant: "{{ tenant }}"
        subscription_id: "{{ subscription_id }}"
        secret: "{{ secret }}"
        resource_group: "{{ resource_group }}"
        name: "{{ nic_name }}"
        virtual_network: "{{ vnet_name }}"
        subnet: "{{ subnet_name }}"
        public_ip_name: "{{ ip_name }}"
        security_group: "{{ sg_name }}"

    - name: Create VM
      azure_rm_virtualmachine:
        client_id: "{{ client_id }}"
        tenant: "{{ tenant }}"
        subscription_id: "{{ subscription_id }}"
        secret: "{{ secret }}"
        resource_group: "{{ resource_group }}"
        name: "{{ resource_name }}"
        vm_size: "{{ instance_size }}"
        admin_username: "{{ remote_user }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ remote_user }}/.ssh/authorized_keys"
            key_data: "{{ ssh_public_key }}"
        network_interfaces: "{{ nic_name }}"
        tags: "{{ tags }}"
        append_tags: no
        image:
          offer: "CentOS"
          publisher: OpenLogic
          sku: '7.5'
          version: latest
      retries: 10
      delay: 6
      register: result
      until: result is not failed

    - block:
      - name: Create artifact file
        file:
          path: /tmp/var.json
          state: touch

      - name: load var from file
        include_vars:
          file: /tmp/var.json
          name: temp_json

      - name: Creating artifact JSON key/values
        set_fact:
          artifact_json: "{{ temp_json | default([]) | combine({
            'resource_id': resource_id,
            'params': {
                'ip': item
            }
            })
          }}"
        with_items: "{{ vm_public_ip }}"

      - name: write var to file
        copy:
          content: "{{ artifact_json | to_nice_json }}"
          dest: "{{ artifact_path }}/artifact.json"
      delegate_to: localhost

    - name: wait for SSH to come up
      local_action: wait_for host={{ item }} port=22 delay=60 timeout=320 state=started search_regex="OpenSSH"
      with_items: "{{ vm_public_ip }}"
